<application>
  <component name="AppStorage">
    <option name="pinNewTranslationDialog" value="true" />
    <histories>
      <item value="Daemon" />
      <item value="SONIFICATION" />
      <item value="CONTENT TYPE SONIFICATION" />
      <item value="SPEECH" />
      <item value="CONTENT TYPE SPEECH" />
      <item value="draw Rect.left" />
      <item value="get Audio Source" />
      <item value="Minor" />
      <item value="Major" />
      <item value="get Touch Major" />
      <item value="AXIS PRESSURE" />
      <item value="get Pressure" />
      <item value="for the first pointer index (may be an arbitrary pointer identifier)." />
      <item value="EMULATION" />
      <item value="Cornor" />
      <item value="end Update With Cornor" />
      <item value="threshold" />
      <item value="Gaussian Blur" />
      <item value="cvt Color" />
      <item value="hierarchy" />
      <item value="REVERSE DIFFERENCE" />
      <item value="XOR" />
      <item value="UNION" />
      <item value="INTERSECT" />
      <item value="DIFFERENCE" />
      <item value="The x-coordinate of the control point on a quadratic curve" />
      <item value="Permit" />
      <item value="The internal state associated with this pseudorandom number generator. (The specs for the methods in this class describe the ongoing computation of this value.)" />
      <item value="Finds out if there is any intersection between two rotated rectangles." />
      <item value="inds out if there is any intersection between two rotated rectangles." />
      <item value="Returns the correctly rounded positive square root of a {@code double} value." />
      <item value="Ellipse" />
      <item value="Accumulator threshold parameter. Only those lines are returned that get enough" />
      <item value="Angle resolution of the accumulator in radians." />
      <item value="RETR CCOMP" />
      <item value="The function computes a curve length or a closed contour perimeter." />
      <item value="cosfi" />
      <item value="Sets the left position of this view relative to its parent. This method is meant to be called by the layout system and should not generally be called otherwise, because the property may be changed at any time by the layout." />
      <item value="Determine if the supplied view is under the given point in the parent view's coordinate system. @param view Child view of the parent to hit test @param x X position to test in the parent's coordinate system @param y Y position to test in the parent's coordinate system @return true if the supplied view is under the given point, false otherwise" />
      <item value="ID of the pointer that is dragging the captured child view" />
      <item value="Capture a specific child view for dragging within the parent. The callback will be notified but {@link CallbacktryCaptureView(android.view.View, int)} will not be asked permission to capture this view. @param childView Child view to capture @param activePointerId ID of the pointer that is dragging the captured child view" />
      <item value="@return The minimum distance in pixels that the user must travel to initiate a drag" />
      <item value="Called to determine the Z-order of child views. @param index the ordered position to query for @return index of the view that should be ordered at position &lt;code&gt;index&lt;code&gt;" />
      <item value="Enable edge tracking for the selected edges of the parent view. The callback's {@link CallbackonEdgeTouched(int, int)} and {@link CallbackonEdgeDragStarted(int, int)} methods will only be invoked for edges for which edge tracking has been enabled." />
      <item value="A combination of edge flags describing the edge(s) locked" />
      <item value="Called when the given edge may become locked. This can happen if an edge drag was preliminarily rejected before beginning, but after {@link onEdgeTouched(int, int)} was called. This method should return true to lock this edge or false to leave it unlocked. The default behavior is to leave edges unlocked." />
      <item value="STATE IDLE" />
      <item value="STATE SETTLING" />
      <item value="The motion event that occurred during the context click." />
      <item value="Implement this method to handle generic motion events." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="151" />
        <entry key="ENGLISH" value="153" />
        <entry key="POLISH" value="1" />
        <entry key="MALTESE" value="1" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="JAPANESE" value="1" />
        <entry key="HINDI" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1671454477328" />
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20190520000299422" />
      </app-key>
    </option>
    <option name="googleTranslateSettings">
      <google-translate>
        <option name="primaryLanguage" value="ESPERANTO" />
      </google-translate>
    </option>
    <option name="translator" value="BAIDU" />
  </component>
  <component name="Translation.Cache">
    <option name="lastTrimTime" value="1725433875612" />
  </component>
  <component name="Translation.States">
    <option name="translationDialogHeight" value="260" />
    <option name="translationDialogLocationX" value="2172" />
    <option name="translationDialogLocationY" value="415" />
    <histories>
      <item value="size to intrinsics" />
      <item value="@param annotatedString the text to be rendered. @param selection the selection range. If the selection is collapsed, it represents cursor location. When selection range is out of bounds, it is constrained with the text length. @param composition the composition range, null means empty composition or apply if a composition exists on the text. Owned by IME, and if you have an instance of [TextFieldValue] please use [copy] functions if you do not want to intentionally change the value of this field." />
      <item value="Admin" />
      <item value="Adminer" />
      <item value="collapse" />
      <item value="確認する" />
      <item value="フォロワー" />
      <item value="フォロー" />
      <item value="アカウント残高が%1d秒しか通話をサポートできませんので、通話時間を確保するために時間内にチャージしてください(1分ごとに%2dコインを消費します）！" />
      <item value="分かりました" />
      <item value="async" />
      <item value="immediately show" />
      <item value="GLOBAL ACTION DISMISS NOTIFICATION SHADE" />
      <item value="Returns a [StateFlow] that will emit the currently active value associated with the given key. ``` val flow = savedStateHandle.getStateFlow(KEY, &quot;defaultValue&quot;) ``` Since this is a [StateFlow] there will always be a value available which, is why an initial value must be provided. The value of this flow is changed by making a call to [set], passing in the key that references this flow. If there is already a value associated with the given key, the initial value will be ignored. Note: If [T] is an [Array] of [Parcelable] classes, note that you should always use `Array&lt;Parcelable&gt;` and create a typed array from the result as going through process death and recreation (or using the `Don't keep activities` developer option) will result in the type information being lost, thus resulting in a `ClassCastException` if you directly try to collect the result as an `Array&lt;CustomParcelable&gt;`. ``` val typedArrayFlow = savedStateHandle.getStateFlow&lt;Array&lt;Parcelable&gt;&gt;( &quot;KEY&quot; ).map { array -&gt; Convert the Array&lt;Parcelable&gt; to an Array&lt;CustomParcelable&gt; array.map { it as CustomParcelable }.toTypedArray() } ```" />
      <item value="revoker" />
      <item value="is mutual deleted" />
      <item value="Reactions" />
      <item value="EVENT CODE OVERTIME" />
      <item value="reaction" />
      <item value="the container color when content is scrolled behind it" />
      <item value="family square screen" />
      <item value="Scale horizontal and vertically non-uniformly to fill the destination bounds." />
      <item value="show msg reaction" />
      <item value="Repeatable" />
      <item value="This type is not supported when configuration caching is enabled." />
      <item value="evaluated" />
      <item value="Adds a listener to this build, to receive notifications as projects are evaluated." />
      <item value="Whether this navigation action should restore any state previously saved by [Builder.setPopUpTo] or the `popUpToSaveState` attribute." />
      <item value="Whether this navigation action should launch as single-top (i.e., there will be at most one copy of a given destination on the top of the back stack). This functions similarly to how [android.content.Intent.FLAG_ACTIVITY_SINGLE_TOP] works with activities." />
      <item value="NavDeepLink encapsulates the parsing and matching of a navigation deep link. This should be added to a [NavDestination] using [NavDestination.addDeepLink]." />
      <item value="treasure totips" />
      <item value="`" />
      <item value="STATION" />
      <item value="GOSSIP" />
      <item value="PKCE code_verifier for getting the access_token andor id_token" />
      <item value="is Mutual Deleted" />
      <item value="if true gone the load more view" />
      <item value="When the animation reaches the end and &lt;code&gt;repeatCount&lt;code&gt; is INFINITE or a positive value, the animation restarts from the beginning." />
      <item value="Sets how many times the animation should be repeated. If the repeat count is 0, the animation is never repeated. If the repeat count is greater than 0 or {@link LottieDrawableINFINITE}, the repeat mode will be taken into account. The repeat count is 0 by default." />
      <item value="true if the callback consumed the long click, false otherwise." />
      <item value="Resumed state for a LifecycleOwner. For an [android.app.Activity], this state is reached after [onResume][android.app.Activity.onResume] is called." />
      <item value="Compares if this State is greater or equal to the given `state`. @param state State to compare with @return true if this State is greater or equal to the given `state`" />
      <item value="launchWhenCreated is deprecated as it can lead to wasted resources &quot; + &quot;in some cases. Replace with suspending repeatOnLifecycle to run the block whenever &quot; + &quot;the Lifecycle state is at least Lifecycle.State.CREATED." />
      <item value="Indicates that the ViewPager2 is in the process of settling to a final position." />
      <item value="SCROLL STATE SETTLING" />
      <item value="Some device read data very slow with uri, but fast with file path. &lt;br&gt; Reference: &lt;a href='https:github.combumptechglideissues4174'&gt;https:github.combumptechglideissues4174&lt;a&gt; &lt;p&gt; When setting android:requestLegacyExternalStorage=&quot;true&quot;&lt;br&gt; and Build.VERSION.SDK_INT &lt;= Build.VERSION_CODES.Q, The app can read media with File API (like FileInputStream). &lt;p&gt; Note: When get an uri from file, use 'uri.getPath()' rather than 'uri.toString()' to File API." />
      <item value="[Key] for previous page if more data can be loaded in that direction, `null` otherwise." />
      <item value="otherwise" />
      <item value="[Key] for next page if more data can be loaded in that direction, `null` otherwise." />
      <item value="&lt;p&gt;This class and its iterator implement all of the &lt;em&gt;optional&lt;em&gt; methods of the {@link Collection} and {@link Iterator} interfaces. The Iterator provided in method {@link iterator()} is &lt;em&gt;not&lt;em&gt; guaranteed to traverse the elements of the PriorityBlockingQueue in any particular order. If you need ordered traversal, consider using {@code Arrays.sort(pq.toArray())}. Also, method {@code drainTo} can be used to &lt;em&gt;remove&lt;em&gt; some or all elements in priority order and place them in another collection." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="BENGALI" value="1" />
        <entry key="CHINESE" value="252" />
        <entry key="ENGLISH" value="253" />
        <entry key="ITALIAN" value="2" />
        <entry key="JAPANESE" value="5" />
        <entry key="LATIN" value="1" />
        <entry key="SCOTS_GAELIC" value="1" />
      </map>
    </option>
  </component>
</application>