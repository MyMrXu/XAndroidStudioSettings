<application>
  <component name="AppStorage">
    <histories>
      <item value="score" />
      <item value="Integral" />
      <item value="外部" />
      <item value="* shit UI * he give me some png with UpperCase letter * i have to modify them one by one * when i finished it * i reversed them * fuck! i dont want touch them anymore * so be it" />
      <item value="Absent" />
      <item value="directly" />
      <item value="Utilities methods for {@link ViewModelStore} class." />
      <item value="MEDIA NOFS" />
      <item value="unplug" />
      <item value="Posts a task to a main thread to set the given value. So if you have a following code * executed in the main thread:" />
      <item value="Rotation" />
      <item value="apps should use the more versatile {@link #requestNetwork}," />
      <item value="Apps may not have filesystem permissions to directly * access this path. Instead of trying to open this path * directly, apps should use * {@link ContentResolver#openFileDescriptor(Uri, String)} * to gain access." />
      <item value="Apps may not have filesystem permissions to directly * access this path. Instead of trying to open this path * directly, apps should use" />
      <item value="Apps can continue to access content stored on shared/external * storage by migrating to alternatives such as" />
      <item value="the path returned * from this method is no longer directly accessible to apps." />
      <item value="To improve user privacy, direct access to shared/external * storage devices is deprecated. When an app targets * {@link android.os.Build.VERSION_CODES#Q}, the path returned * from this method is no longer directly accessible to apps. * Apps can continue to access content stored on shared/external * storage by migrating to alternatives such as * {@link Context#getExternalFilesDir(String)}, * {@link MediaStore}, or {@link Intent#ACTION_OPEN_DOCUMENT}." />
      <item value="inserting of images should be performed using * {@link MediaColumns#IS_PENDING}, which offers richer * control over lifecycle." />
      <item value="solar" />
      <item value="Unique" />
      <item value="triangle Size" />
      <item value="distence" />
      <item value="Angel" />
      <item value="Move Angel" />
      <item value="pow" />
      <item value="Curves" />
      <item value="Triangle" />
      <item value="Visual" />
      <item value="Sets the color of the status bar to {@code color}." />
      <item value="parent Payload" />
      <item value="后台服务" />
      <item value="后台" />
      <item value="Remit Database" />
      <item value="m Min Job Scheduler Id" />
      <item value="enqueue Unique Work" />
      <item value="Periodic Work Request Builder" />
      <item value="have not manually called WorkManager#initialize at this point, and your Application does not implement Configuration.Provider." />
      <item value="You have explicitly disabled WorkManagerInitializer in your manifest" />
      <item value="WorkManager is not initialized properly" />
      <item value="percent" />
      <item value="flex Time Interval" />
      <item value="repeat Interval" />
      <item value="Periodic" />
      <item value="capped" />
      <item value="This behavior relies on the deprecated" />
      <item value="Jetty Boot" />
      <item value="Chain" />
      <item value="This interceptor recovers from failures and follows redirects as necessary. It may throw an" />
      <item value="chain" />
      <item value="RELATIVE PATH" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="51" />
        <entry key="ENGLISH" value="52" />
        <entry key="POLISH" value="1" />
        <entry key="MALTESE" value="1" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="HINDI" value="1" />
      </map>
    </option>
  </component>
</application>