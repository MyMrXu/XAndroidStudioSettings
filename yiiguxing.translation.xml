<application>
  <component name="AppStorage">
    <option name="pinNewTranslationDialog" value="true" />
    <histories>
      <item value="Returns milliseconds since boot, including time spent in sleep. @return elapsed milliseconds since boot." />
      <item value="traffic Out" />
      <item value="Extra for {@link android.content.IntentACTION_BATTERY_CHANGED}: integer containing the current battery temperature." />
      <item value="active Participants" />
      <item value="Feature" />
      <item value="Semaphore" />
      <item value="Skip StringCoding optimization that needs access to java chars." />
      <item value="ND Android-changed: Skip StringCoding optimization that needs access to java chars." />
      <item value="If the [index] is out of bounds of this string, throws an [IndexOutOfBoundsException] except in KotlinJS where the behavior is unspecified." />
      <item value="Flips this buffer. The limit is set to the current position and then the position is set to zero. If the mark is defined then it is discarded." />
      <item value="&lt;p&gt; If the file does not reside on a local device then no such guarantee is made." />
      <item value="&lt;p&gt; If this channel's file resides on a local storage device then when this method returns it is guaranteed that all changes made to the file since this channel was created, or since this method was last invoked, will have been written to that device. This is useful for ensuring that critical information is not lost in the event of a system crash." />
      <item value="Forces any updates to this channel's file to be written to the storage device that contains it." />
      <item value="&lt;p&gt; The initial {@link java.nio.channels.FileChannelposition() position} of the returned channel will be equal to the number of bytes written to the file so far unless this stream is in append mode, in which case it will be equal to the size of the file. Writing bytes to this stream will increment the channel's position accordingly. Changing the channel's position, either explicitly or by writing, will change this stream's file position." />
      <item value="the file channel associated with this file output stream" />
      <item value="Returns the unique {@link java.nio.channels.FileChannel FileChannel} object associated with this file output stream." />
      <item value="try Acquire" />
      <item value="Clear any lines and curves from the path, making it empty. This does NOT change the fill-type setting." />
      <item value="re Path" />
      <item value="abnormal" />
      <item value="Attempts to match the entire region against the pattern." />
      <item value="Return the total number of instructions executed globally (i.e. in all threads)." />
      <item value="drawing cache created in Viewdraw when drawing to a SW canvas." />
      <item value="NOTE: even if previous layer type is HW, we do this to ensure we've cleaned up" />
      <item value="Destroy any previous software drawing cache if present" />
      <item value="For software-rendered snapshots of a small part of the View hierarchy or individual Views it is recommended to create a {@link Canvas} from either a {@link Bitmap} or {@link android.graphics.Picture} and call {@link draw(Canvas)} on the View. However these software-rendered usages are discouraged and have compatibility issues with hardware-only rendering features such as {@link android.graphics.Bitmap.ConfigHARDWARE Config.HARDWARE} bitmaps, real-time shadows, and outline clipping. For screenshots of the UI for feedback reports or unit testing the {@link PixelCopy} API is recommended." />
      <item value="The view drawing cache was largely made obsolete with the introduction of hardware-accelerated rendering in API 11. With hardware-acceleration, intermediate cache layers are largely unnecessary and can easily result in a net loss in performance due to the cost of creating and updating the layer. In the rare cases where caching layers are useful, such as for alpha animations, {@link setLayerType(int, Paint)} handles this with hardware rendering." />
      <item value="intended" />
      <item value="animation" />
      <item value="traversal" />
      <item value="traversal Cost Ns" />
      <item value="DEFAULT DROPPED HIGH" />
      <item value="DEFAULT DROPPED FROZEN" />
      <item value="drop Frame Listener Threshold" />
      <item value="ACCUMELAING" />
      <item value="plugin duplicate init" />
      <item value="normal Threshold" />
      <item value="high Threshold" />
      <item value="frozen Threshold" />
      <item value="ZTE" />
      <item value="Modern" />
      <item value="is ZTE Modern Device" />
      <item value="still Receiving Unexpected Stream" />
      <item value="do not compress when the origin image file size less than one value" />
      <item value="focus Alpha" />
      <item value="mRequestPlaybackData: check if there is enough playing buffer pending. playing has higher priority" />
      <item value="we find c recorder cannot fire forceGet and tryGet at needed frequency." />
      <item value="continuous Count" />
      <item value="last Lack Frame" />
      <item value="In some machine (ASUS X008D), player callback implemented badly, will callback twice in one millisecond. So there's no way that the playback after second one can fetch a frame. We should send more frame when we find we are in this situation." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="151" />
        <entry key="ENGLISH" value="153" />
        <entry key="POLISH" value="1" />
        <entry key="MALTESE" value="1" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="JAPANESE" value="1" />
        <entry key="HINDI" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1644820974369" />
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20190520000299422" />
      </app-key>
    </option>
    <option name="googleTranslateSettings">
      <google-translate>
        <option name="primaryLanguage" value="ESPERANTO" />
      </google-translate>
    </option>
    <option name="translator" value="BAIDU" />
  </component>
</application>