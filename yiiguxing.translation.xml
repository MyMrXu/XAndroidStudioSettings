<application>
  <component name="AppStorage">
    <histories>
      <item value="Avoid missing screen frames," />
      <item value="not be invoked at once when it has already achieved to ensure callbacks don't be too frequent" />
      <item value="Avoid missing screen frames, this leads to all callbacks in {@link FileDownloadListener} do" />
      <item value="Set whether the task is completed directly without any further action when check the task" />
      <item value="Similar to {@link #executeTransaction(Transaction)} but runs asynchronously on a worker thread." />
      <item value="necessary" />
      <item value="PENDING" />
      <item value="The serial queue, what used to dynamically increase tasks, and tasks in the queue will * automatically start download one by one." />
      <item value="Expected" />
      <item value="Expected URL scheme 'http' or 'https' but no colon was found" />
      <item value="The primary branding color for the app. By default, this is the color applied to the action bar background." />
      <item value="fraction" />
      <item value="mip Map" />
      <item value="auto Mirrored" />
      <item value="dither" />
      <item value="antialias" />
      <item value="Sets the maximum progress that the animation will end at when playing or looping." />
      <item value="is Blank" />
      <item value="applyuserinfoevent" />
      <item value="pos will be negative." />
      <item value="kernel" />
      <item value="If the thumbnail load completes before the full * size load, the thumbnail will be shown. If the thumbnail load completes after the full size * load, the thumbnail will not be shown" />
      <item value="Loads a resource in an identical manner to this request except with the dimensions of the * target multiplied by the given size multiplier." />
      <item value="Loads a resource in an identical manner to this request except with the dimensions of the" />
      <item value="Assist" />
      <item value="m On Event Assist Handler" />
      <item value="period" />
      <item value="daemon" />
      <item value="Duplicate" />
      <item value="Otherwise, we end up removing the clicking from earlier tables." />
      <item value="This sucks, but we need this so that each table can get its own ClickableTableSpan." />
      <item value="Writes retrieved data directly to the disk cache before it's decoded." />
      <item value="Return the milliseconds differ time span by now." />
      <item value="eturn the milliseconds differ time span by now." />
      <item value="Return the fit time span." />
      <item value="generic" />
      <item value="This method must be called from the main thread. If you need set a value from a background * thread, you can use {@link #postValue(Object)}" />
      <item value="Sets the value. If there are active observers, the value will be dispatched to them." />
      <item value="Posts a task to a main thread to set the given value. So if you have a following code * executed in the main thread:" />
      <item value="layout tab" />
      <item value="the titleView is not be add into parentView" />
      <item value="ratio" />
      <item value="contrast" />
      <item value="luminance" />
      <item value="Absent" />
      <item value="ttrans" />
      <item value="This method takes data in byte array format and ensures that each block of data is of 16 bits and * appends padding data if last block is smaller then 16 bits and returns the new array." />
      <item value="This method removes the padding data from last block of data array." />
      <item value="Encryption" />
      <item value="get Delivery" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="115" />
        <entry key="ENGLISH" value="116" />
        <entry key="POLISH" value="1" />
        <entry key="MALTESE" value="1" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="HINDI" value="1" />
      </map>
    </option>
  </component>
</application>