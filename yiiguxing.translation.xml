<application>
  <component name="AppStorage">
    <option name="pinNewTranslationDialog" value="true" />
    <histories>
      <item value="Daemon" />
      <item value="SONIFICATION" />
      <item value="CONTENT TYPE SONIFICATION" />
      <item value="SPEECH" />
      <item value="CONTENT TYPE SPEECH" />
      <item value="draw Rect.left" />
      <item value="get Audio Source" />
      <item value="Minor" />
      <item value="Major" />
      <item value="get Touch Major" />
      <item value="AXIS PRESSURE" />
      <item value="get Pressure" />
      <item value="for the first pointer index (may be an arbitrary pointer identifier)." />
      <item value="EMULATION" />
      <item value="Cornor" />
      <item value="end Update With Cornor" />
      <item value="threshold" />
      <item value="Gaussian Blur" />
      <item value="cvt Color" />
      <item value="hierarchy" />
      <item value="REVERSE DIFFERENCE" />
      <item value="XOR" />
      <item value="UNION" />
      <item value="INTERSECT" />
      <item value="DIFFERENCE" />
      <item value="The x-coordinate of the control point on a quadratic curve" />
      <item value="Permit" />
      <item value="The internal state associated with this pseudorandom number generator. (The specs for the methods in this class describe the ongoing computation of this value.)" />
      <item value="Finds out if there is any intersection between two rotated rectangles." />
      <item value="inds out if there is any intersection between two rotated rectangles." />
      <item value="Returns the correctly rounded positive square root of a {@code double} value." />
      <item value="Ellipse" />
      <item value="Accumulator threshold parameter. Only those lines are returned that get enough" />
      <item value="Angle resolution of the accumulator in radians." />
      <item value="RETR CCOMP" />
      <item value="The function computes a curve length or a closed contour perimeter." />
      <item value="cosfi" />
      <item value="Sets the left position of this view relative to its parent. This method is meant to be called by the layout system and should not generally be called otherwise, because the property may be changed at any time by the layout." />
      <item value="Determine if the supplied view is under the given point in the parent view's coordinate system. @param view Child view of the parent to hit test @param x X position to test in the parent's coordinate system @param y Y position to test in the parent's coordinate system @return true if the supplied view is under the given point, false otherwise" />
      <item value="ID of the pointer that is dragging the captured child view" />
      <item value="Capture a specific child view for dragging within the parent. The callback will be notified but {@link CallbacktryCaptureView(android.view.View, int)} will not be asked permission to capture this view. @param childView Child view to capture @param activePointerId ID of the pointer that is dragging the captured child view" />
      <item value="@return The minimum distance in pixels that the user must travel to initiate a drag" />
      <item value="Called to determine the Z-order of child views. @param index the ordered position to query for @return index of the view that should be ordered at position &lt;code&gt;index&lt;code&gt;" />
      <item value="Enable edge tracking for the selected edges of the parent view. The callback's {@link CallbackonEdgeTouched(int, int)} and {@link CallbackonEdgeDragStarted(int, int)} methods will only be invoked for edges for which edge tracking has been enabled." />
      <item value="A combination of edge flags describing the edge(s) locked" />
      <item value="Called when the given edge may become locked. This can happen if an edge drag was preliminarily rejected before beginning, but after {@link onEdgeTouched(int, int)} was called. This method should return true to lock this edge or false to leave it unlocked. The default behavior is to leave edges unlocked." />
      <item value="STATE IDLE" />
      <item value="STATE SETTLING" />
      <item value="The motion event that occurred during the context click." />
      <item value="Implement this method to handle generic motion events." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="151" />
        <entry key="ENGLISH" value="153" />
        <entry key="POLISH" value="1" />
        <entry key="MALTESE" value="1" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="JAPANESE" value="1" />
        <entry key="HINDI" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1671454477328" />
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20190520000299422" />
      </app-key>
    </option>
    <option name="googleTranslateSettings">
      <google-translate>
        <option name="primaryLanguage" value="ESPERANTO" />
      </google-translate>
    </option>
    <option name="translator" value="BAIDU" />
  </component>
  <component name="Translation.Cache">
    <option name="lastTrimTime" value="1719802143978" />
  </component>
  <component name="Translation.States">
    <histories>
      <item value="URL UNION AGREEMENT" />
      <item value="URL COMMITMENT LETTER" />
      <item value="URL COOPERATION AGREEMENT" />
      <item value="Returns a new persistent list of the specified elements." />
      <item value="A generic persistent ordered collection of elements that supports adding and removing elements. Modification operations return new instances of the persistent list with the modification applied. @param E the type of elements contained in the list. The persistent list is covariant on its element type." />
      <item value="A generic immutable ordered collection of elements. Methods in this interface support only read-only access to the immutable list. Modification operations are supported through the [PersistentList] interface. Implementors of this interface take responsibility to be immutable. Once constructed they must contain the same elements in the same order. @param E the type of elements contained in the list. The immutable list is covariant on its element type." />
      <item value="persistent" />
      <item value="Returns an empty persistent list." />
      <item value="adjust" />
      <item value="User implemented custom auto migration spec. @return The auto migration specification or none if the user has not implemented a spec" />
      <item value="You can set the annotation processor argument (`room.schemaLocation`) to tell Room to export the database schema into a folder. Even though it is not mandatory, it is a good practice to have version history of your schema in your codebase and you should commit the schema files into your version control system (but don't ship them with your app!). When `room.schemaLocation` is set, Room will check this variable and if it is set to `true`, the database schema will be exported into the given folder. Value of `exportSchema` is `true` by default but you can disable it for databases when you don't want to keep history of versions (like an in-memory only database). @return Whether the schema should be exported to the given folder when the `room.schemaLocation` argument is set. Defaults to `true`." />
      <item value="Do not pay for dispatch here, it's never necessary" />
      <item value="UNDISPATCHED" />
      <item value="relative three children" />
      <item value="A high-priority mutation that can only be interrupted by other [PreventUserInput] priority operations. [PreventUserInput] priority should be used for operations that user input should not be able to interrupt." />
      <item value="Expansion" />
      <item value="set expansion" />
      <item value="message expansion change listener" />
      <item value="set message expansion listener" />
      <item value="opposite sex flow" />
      <item value="Segment" />
      <item value="on segment success" />
      <item value="sonLiteral is deprecated for public use and no longer available. Please use JsonPrimitive instead" />
      <item value="Creates a [JsonPrimitive] from the given number." />
      <item value="Creating a literal unquoted value of `null` (as in, `value == &quot;null&quot;`) is forbidden. If you want to create JSON null literal, use [JsonNull] object, otherwise, use [JsonPrimitive]." />
      <item value="Sets the host's ViewModelStore used by the NavController to store ViewModels at the navigation graph level. This is required to call [getViewModelStoreOwner] and should generally be called for you by your [NavHost]." />
      <item value="Accusate" />
      <item value="report" />
      <item value="report accusate" />
      <item value="Spirit" />
      <item value="overseas" />
      <item value="inclusive" />
      <item value="group request decline" />
      <item value="set up" />
      <item value="define custom spans for the items. Default is 1x1. It is good practice to leave it `null` when this matches the intended behavior, as providing a custom implementation impacts performance" />
      <item value="apply group disband" />
      <item value="apply group description" />
      <item value="switch join audit" />
      <item value="解散群聊" />
      <item value="reduce" />
      <item value="展開" />
      <item value="Pops all destinations off the backstack up to the destination that meets the condition of the [predicate] and replaces them with [newDestinations]." />
      <item value="Creates and sets a new backstack filled with [entries]. You should use existing entries from [backstack] to preserve their identities and associated components (lifecycles, saved states, view models). New entries can be created with [navEntry] method. Any new rearrangement, duplication and removal of existing entries is a valid change. Use this method when none of the built-in extension methods ([navigate], [pop], [replaceLast] and their variations) suits your need. This function does not guarantee thread-safety and is intended to be called only from the main thread. @param action an optional parameter, used as a hint for [AnimatedNavHost] to select a transition animation. In all other cases it doesn't affect anything. Existing types of actions may be used: [NavAction.Navigate], [NavAction.Replace] or [NavAction.Pop]. You may also extend [NavAction] interface to create new actions appropriate for your use case." />
      <item value="The list of current entries in the backstack. The last item in this list is the item that will be displayed by [NavHost]. May become empty if you pop all the items off the backstack." />
      <item value="is wider screen" />
      <item value="are unlikely to change for the components in the content of a the [CompositionLocalProvider] and should consider using a [staticCompositionLocalOf]." />
      <item value="similar" />
      <item value="cause the entirety of the content to be recomposed instead of just the places where in the composition the local value is used." />
      <item value="tracked" />
      <item value="are not tracked by the composer and changing the value" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="192" />
        <entry key="ENGLISH" value="193" />
        <entry key="ITALIAN" value="2" />
        <entry key="LATIN" value="1" />
      </map>
    </option>
  </component>
</application>